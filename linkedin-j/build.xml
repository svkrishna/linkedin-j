<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="linkedin-j">
    <property environment="env"/>
    <property name="workspace_loc:linkedin-j/schema/src/test/resources/com/google/code/linkedinapi/schema/xml" value="schema/src/test/resources/com/google/code/linkedinapi/schema/xml"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="linkedin-j.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/signpost-core-1.1-SNAPSHOT.jar"/>
        <pathelement location="dev-lib/junit-4.5.jar"/>
        <pathelement location="dev-lib/trang.jar"/>
    </path>
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
		<classpath refid="linkedin-j.classpath"/>
	</taskdef>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="schema/src/main/java" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="schema/src/test/resources" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="core/src/examples/java" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="core/src/test/resources" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="core/src/main/resources" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="core/src/test/java" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="schema/src/main/resources" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="core/src/main/java" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="schema/src/test/java" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="schema/src/main/java"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="schema/src/test/resources"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="core/src/examples/java"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="core/src/test/resources"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="core/src/main/resources"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="core/src/test/java"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="schema/src/main/resources"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="core/src/main/java"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="schema/src/test/java"/>
            <classpath refid="linkedin-j.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="GenerateXmlSchema">
        <java classname="com.thaiopensource.relaxng.translate.Driver" dir="${workspace_loc:linkedin-j/schema/src/test/resources/com/google/code/linkedinapi/schema/xml}" failonerror="true" fork="yes">
            <arg line="*.xml linkedin-api.xsd"/>
            <classpath refid="linkedin-j.classpath"/>
        </java>
    </target>
	<xjc target="src">
	  <schema dir="src" includes="**/*.xsd" excludes="**/debug.xsd"/>
	  <arg value="-nv" />
	</xjc>
</project>
